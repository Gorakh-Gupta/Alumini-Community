{"ast":null,"code":"var _jsxFileName = \"/Users/abhishekswaraj/Desktop/Alumni-System/client/src/context/AuthContext.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, createContext, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\n\nfunction AuthContextProvider(props) {\n  _s();\n\n  const [loggedUser, setLoggedUser] = useState(undefined);\n  const [user, setUser] = useState({});\n\n  async function getLogged() {\n    const loggedRes = await axios.get('http://localhost:8080/users/loggedIn');\n    setLoggedUser(loggedRes.data);\n    await axios.get('http://localhost:8080/users/loggeduser').then(data => setUser(data.data)).catch(e => console.log(e));\n  }\n\n  useEffect(() => {\n    getLogged();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      loggedUser,\n      getLogged\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 9\n  }, this);\n}\n\n_s(AuthContextProvider, \"vLToE+RYJMxCxQJpS8erT9fiD4s=\");\n\n_c = AuthContextProvider;\nexport default AuthContext;\nexport { AuthContextProvider };\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthContextProvider\");","map":{"version":3,"sources":["/Users/abhishekswaraj/Desktop/Alumni-System/client/src/context/AuthContext.js"],"names":["React","useState","createContext","useEffect","axios","AuthContext","AuthContextProvider","props","loggedUser","setLoggedUser","undefined","user","setUser","getLogged","loggedRes","get","data","then","catch","e","console","log","children"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAwBC,aAAxB,EAAsCC,SAAtC,QAAsD,OAAtD;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AACA,MAAMC,WAAW,gBAACH,aAAa,EAA/B;;AACA,SAASI,mBAAT,CAA6BC,KAA7B,EAAoC;AAAA;;AAChC,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BR,QAAQ,CAACS,SAAD,CAA5C;AACA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBX,QAAQ,CAAC,EAAD,CAAhC;;AACA,iBAAeY,SAAf,GACA;AACI,UAAMC,SAAS,GAAC,MAAMV,KAAK,CAACW,GAAN,CAAU,sCAAV,CAAtB;AACAN,IAAAA,aAAa,CAACK,SAAS,CAACE,IAAX,CAAb;AACA,UAAMZ,KAAK,CAACW,GAAN,CAAU,wCAAV,EACLE,IADK,CACAD,IAAI,IAAEJ,OAAO,CAACI,IAAI,CAACA,IAAN,CADb,EAELE,KAFK,CAECC,CAAC,IAAEC,OAAO,CAACC,GAAR,CAAYF,CAAZ,CAFJ,CAAN;AAGH;;AACDhB,EAAAA,SAAS,CAAC,MAAM;AACZU,IAAAA,SAAS;AACZ,GAFQ,EAEN,EAFM,CAAT;AAGA,sBACI,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAE;AAACL,MAAAA,UAAD;AAAYK,MAAAA;AAAZ,KAA7B;AAAA,cACKN,KAAK,CAACe;AADX;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH;;GAnBQhB,mB;;KAAAA,mB;AAqBT,eAAeD,WAAf;AACA,SAAQC,mBAAR","sourcesContent":["import React, {useState,createContext,useEffect} from 'react'\nimport axios from 'axios'\nconst AuthContext=createContext();\nfunction AuthContextProvider(props) {\n    const [loggedUser, setLoggedUser] = useState(undefined);\n    const [user, setUser] = useState({});\n    async function getLogged()\n    {\n        const loggedRes=await axios.get('http://localhost:8080/users/loggedIn')\n        setLoggedUser(loggedRes.data);\n        await axios.get('http://localhost:8080/users/loggeduser')\n        .then(data=>setUser(data.data))\n        .catch(e=>console.log(e))\n    }\n    useEffect(() => {\n        getLogged();\n    }, [])\n    return (\n        <AuthContext.Provider value={{loggedUser,getLogged}} >\n            {props.children}\n        </AuthContext.Provider>\n    )\n}\n\nexport default AuthContext;\nexport {AuthContextProvider};\n"]},"metadata":{},"sourceType":"module"}