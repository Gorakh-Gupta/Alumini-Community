{"ast":null,"code":"var _jsxFileName = \"/Users/abhishekswaraj/Desktop/Alumni-System/client/src/components/Reset.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Button, Form, Jumbotron } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Reset(props) {\n  _s();\n\n  const token = props.match.params.token;\n  const [new1, setNew1] = useState('');\n  const [new2, setNew2] = useState('');\n  const [msg, setMsg] = useState('');\n\n  const submithandler = e => {\n    e.preventDefault();\n\n    if (new1 == new2) {\n      axios.post(`http://localhost:8080/users/resetpass`, {\n        token,\n        pass: new1\n      }).then(data => {\n        setMsg(data.data.msg);\n        setInterval(() => {\n          props.history.push('/');\n        }, 2000);\n      }).catch(err => console.log(err));\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Jumbotron, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Reset Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: submithandler,\n        children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"formBasicPassword\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Enter New Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"password\",\n            value: new1,\n            onChange: e => setNew1(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"formBasicPassword\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Enter New Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"password\",\n            value: new2,\n            onChange: e => setNew2(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 17\n        }, this), msg.length > 0 && /*#__PURE__*/_jsxDEV(\"h5\", {\n          children: msg\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 34\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          type: \"submit\",\n          className: \"btn btn-primary btn-block\",\n          children: \"Reset Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Reset, \"n/MgvBOWdx+IM7OeliFfKbbjIJw=\");\n\n_c = Reset;\nexport default Reset;\n\nvar _c;\n\n$RefreshReg$(_c, \"Reset\");","map":{"version":3,"sources":["/Users/abhishekswaraj/Desktop/Alumni-System/client/src/components/Reset.js"],"names":["React","useState","useEffect","axios","Button","Form","Jumbotron","Reset","props","token","match","params","new1","setNew1","new2","setNew2","msg","setMsg","submithandler","e","preventDefault","post","pass","then","data","setInterval","history","push","catch","err","console","log","target","value","length"],"mappings":"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","sourcesContent":["import React,{useState,useEffect} from 'react'\nimport axios from 'axios'\nimport { Button, Form, Jumbotron } from 'react-bootstrap';\n\nfunction Reset(props) {\n    const token=props.match.params.token;\n    const [new1, setNew1] = useState('')\n    const [new2, setNew2] = useState('')\n    const [msg, setMsg] = useState('');\n    const submithandler=(e)=>{\n        e.preventDefault();\n        if(new1==new2)\n        {\n            axios.post(`http://localhost:8080/users/resetpass`,{token,pass:new1})\n            .then((data)=>{\n                setMsg(data.data.msg)\n                setInterval(()=>{\n                    props.history.push('/');\n                },2000)\n            })\n            .catch((err)=>console.log(err))\n        }\n    }\n    return (\n        <div>\n            <Jumbotron>\n                <h1>Reset Password</h1>\n            <Form onSubmit={submithandler}>\n                <Form.Group controlId=\"formBasicPassword\">\n                    <Form.Label>Enter New Password</Form.Label>\n                    <Form.Control type=\"password\" value={new1} onChange={(e)=>setNew1(e.target.value)}/>\n                </Form.Group>\n                <Form.Group controlId=\"formBasicPassword\">\n                    <Form.Label>Enter New Password</Form.Label>\n                    <Form.Control type=\"password\" value={new2} onChange={(e)=>setNew2(e.target.value)}/>\n                </Form.Group>\n                {msg.length>0 && <h5>{msg}</h5>}\n                <Button variant=\"primary\" type=\"submit\" className=\"btn btn-primary btn-block\">\n                    Reset Password\n                </Button>\n            </Form>\n            </Jumbotron>\n        </div>\n    )\n}\n\nexport default Reset\n"]},"metadata":{},"sourceType":"module"}