{"ast":null,"code":"var _jsxFileName = \"/Users/abhishekswaraj/Desktop/Alumni-System/client/src/context/AuthContext.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, createContext, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\n\nfunction AuthContextProvider(props) {\n  _s();\n\n  const [loggedUser, setLoggedUser] = useState(undefined);\n  const [loggedAdmin, setLoggedAdmin] = useState(undefined);\n  const [user, setUser] = useState({});\n\n  async function getLogged() {\n    const loggedRes = await axios.get('http://localhost:8080/users/loggedIn').then(data => {\n      if (data.data) setLoggedUser(true);else setLoggedUser(false);\n    }).catch(e => console.log(e));\n    await axios.get('http://localhost:8080/users/loggeduser').then(data => setUser(data.data)).catch(e => console.log(e));\n  }\n\n  async function getLoggedAdmin() {\n    const loggedRes = await axios.get('http://localhost:8080/admin/loggedIn').then(data => {\n      if (data.data) setLoggedAdmin(true);else setLoggedAdmin(false);\n    }).catch(e => console.log(e));\n  }\n\n  useEffect(() => {\n    getLogged();\n    getLoggedAdmin();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      loggedUser,\n      getLogged,\n      user,\n      loggedAdmin,\n      getLoggedAdmin\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n}\n\n_s(AuthContextProvider, \"IqaKv62YpgQPCP4HLRz4f9vFnB4=\");\n\n_c = AuthContextProvider;\nexport default AuthContext;\nexport { AuthContextProvider };\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthContextProvider\");","map":{"version":3,"sources":["/Users/abhishekswaraj/Desktop/Alumni-System/client/src/context/AuthContext.js"],"names":["React","useState","createContext","useEffect","axios","AuthContext","AuthContextProvider","props","loggedUser","setLoggedUser","undefined","loggedAdmin","setLoggedAdmin","user","setUser","getLogged","loggedRes","get","then","data","catch","e","console","log","getLoggedAdmin","children"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAwBC,aAAxB,EAAsCC,SAAtC,QAAsD,OAAtD;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AACA,MAAMC,WAAW,gBAACH,aAAa,EAA/B;;AACA,SAASI,mBAAT,CAA6BC,KAA7B,EAAoC;AAAA;;AAChC,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BR,QAAQ,CAACS,SAAD,CAA5C;AACA,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCX,QAAQ,CAACS,SAAD,CAA9C;AACA,QAAM,CAACG,IAAD,EAAOC,OAAP,IAAkBb,QAAQ,CAAC,EAAD,CAAhC;;AACA,iBAAec,SAAf,GACA;AACI,UAAMC,SAAS,GAAC,MAAMZ,KAAK,CAACa,GAAN,CAAU,sCAAV,EACrBC,IADqB,CACfC,IAAD,IAAQ;AACV,UAAGA,IAAI,CAACA,IAAR,EACIV,aAAa,CAAC,IAAD,CAAb,CADJ,KAGIA,aAAa,CAAC,KAAD,CAAb;AACP,KANqB,EAOrBW,KAPqB,CAOfC,CAAC,IAAEC,OAAO,CAACC,GAAR,CAAYF,CAAZ,CAPY,CAAtB;AAQA,UAAMjB,KAAK,CAACa,GAAN,CAAU,wCAAV,EACLC,IADK,CACAC,IAAI,IAAEL,OAAO,CAACK,IAAI,CAACA,IAAN,CADb,EAELC,KAFK,CAECC,CAAC,IAAEC,OAAO,CAACC,GAAR,CAAYF,CAAZ,CAFJ,CAAN;AAGH;;AACD,iBAAeG,cAAf,GACA;AACI,UAAMR,SAAS,GAAC,MAAMZ,KAAK,CAACa,GAAN,CAAU,sCAAV,EACrBC,IADqB,CACfC,IAAD,IAAQ;AACV,UAAGA,IAAI,CAACA,IAAR,EACIP,cAAc,CAAC,IAAD,CAAd,CADJ,KAGIA,cAAc,CAAC,KAAD,CAAd;AACP,KANqB,EAOrBQ,KAPqB,CAOfC,CAAC,IAAEC,OAAO,CAACC,GAAR,CAAYF,CAAZ,CAPY,CAAtB;AAQH;;AACDlB,EAAAA,SAAS,CAAC,MAAM;AACZY,IAAAA,SAAS;AACTS,IAAAA,cAAc;AACjB,GAHQ,EAGN,EAHM,CAAT;AAIA,sBACI,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAE;AAAChB,MAAAA,UAAD;AAAYO,MAAAA,SAAZ;AAAsBF,MAAAA,IAAtB;AAA2BF,MAAAA,WAA3B;AAAuCa,MAAAA;AAAvC,KAA7B;AAAA,cACKjB,KAAK,CAACkB;AADX;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH;;GAtCQnB,mB;;KAAAA,mB;AAwCT,eAAeD,WAAf;AACA,SAAQC,mBAAR","sourcesContent":["import React, {useState,createContext,useEffect} from 'react'\nimport axios from 'axios'\nconst AuthContext=createContext();\nfunction AuthContextProvider(props) {\n    const [loggedUser, setLoggedUser] = useState(undefined);\n    const [loggedAdmin, setLoggedAdmin] = useState(undefined);\n    const [user, setUser] = useState({});\n    async function getLogged()\n    {\n        const loggedRes=await axios.get('http://localhost:8080/users/loggedIn')\n        .then((data)=>{\n            if(data.data)\n                setLoggedUser(true);\n            else\n                setLoggedUser(false);\n        })\n        .catch(e=>console.log(e))\n        await axios.get('http://localhost:8080/users/loggeduser')\n        .then(data=>setUser(data.data))\n        .catch(e=>console.log(e))\n    }\n    async function getLoggedAdmin()\n    {\n        const loggedRes=await axios.get('http://localhost:8080/admin/loggedIn')\n        .then((data)=>{\n            if(data.data)\n                setLoggedAdmin(true);\n            else\n                setLoggedAdmin(false);\n        })\n        .catch(e=>console.log(e))\n    }\n    useEffect(() => {\n        getLogged();\n        getLoggedAdmin();\n    }, [])\n    return (\n        <AuthContext.Provider value={{loggedUser,getLogged,user,loggedAdmin,getLoggedAdmin}} >\n            {props.children}\n        </AuthContext.Provider>\n    )\n}\n\nexport default AuthContext;\nexport {AuthContextProvider};\n"]},"metadata":{},"sourceType":"module"}