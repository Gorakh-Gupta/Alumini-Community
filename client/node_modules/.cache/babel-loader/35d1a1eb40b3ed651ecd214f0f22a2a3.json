{"ast":null,"code":"var _jsxFileName = \"/Users/abhishekswaraj/Desktop/Alumni-System/client/src/context/AuthContext.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, createContext, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\n\nfunction AuthContextProvider(props) {\n  _s();\n\n  const [loggedUser, setLoggedUser] = useState(undefined);\n  const [loggedAdmin, setLoggedAdmin] = useState(undefined);\n  const [user, setUser] = useState({});\n\n  async function getLogged() {\n    const loggedRes = await axios.get('http://localhost:8080/users/loggedIn');\n    setLoggedUser(loggedRes.data);\n    await axios.get('http://localhost:8080/users/loggeduser').then(data => setUser(data.data)).catch(e => console.log(e));\n  }\n\n  async function getLoggedAdmin() {\n    const loggedRes = await axios.get('http://localhost:8080/admin/loggedIn');\n    console.log(loggedRes);\n    setLoggedAdmin(loggedRes.data);\n  }\n\n  useEffect(() => {\n    getLogged();\n    getLoggedAdmin();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      loggedUser,\n      getLogged,\n      user,\n      loggedAdmin,\n      getLoggedAdmin\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n}\n\n_s(AuthContextProvider, \"IqaKv62YpgQPCP4HLRz4f9vFnB4=\");\n\n_c = AuthContextProvider;\nexport default AuthContext;\nexport { AuthContextProvider };\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthContextProvider\");","map":{"version":3,"sources":["/Users/abhishekswaraj/Desktop/Alumni-System/client/src/context/AuthContext.js"],"names":["React","useState","createContext","useEffect","axios","AuthContext","AuthContextProvider","props","loggedUser","setLoggedUser","undefined","loggedAdmin","setLoggedAdmin","user","setUser","getLogged","loggedRes","get","data","then","catch","e","console","log","getLoggedAdmin","children"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAwBC,aAAxB,EAAsCC,SAAtC,QAAsD,OAAtD;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AACA,MAAMC,WAAW,gBAACH,aAAa,EAA/B;;AACA,SAASI,mBAAT,CAA6BC,KAA7B,EAAoC;AAAA;;AAChC,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BR,QAAQ,CAACS,SAAD,CAA5C;AACA,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCX,QAAQ,CAACS,SAAD,CAA9C;AACA,QAAM,CAACG,IAAD,EAAOC,OAAP,IAAkBb,QAAQ,CAAC,EAAD,CAAhC;;AACA,iBAAec,SAAf,GACA;AACI,UAAMC,SAAS,GAAC,MAAMZ,KAAK,CAACa,GAAN,CAAU,sCAAV,CAAtB;AACAR,IAAAA,aAAa,CAACO,SAAS,CAACE,IAAX,CAAb;AACA,UAAMd,KAAK,CAACa,GAAN,CAAU,wCAAV,EACLE,IADK,CACAD,IAAI,IAAEJ,OAAO,CAACI,IAAI,CAACA,IAAN,CADb,EAELE,KAFK,CAECC,CAAC,IAAEC,OAAO,CAACC,GAAR,CAAYF,CAAZ,CAFJ,CAAN;AAGH;;AACD,iBAAeG,cAAf,GACA;AACI,UAAMR,SAAS,GAAC,MAAMZ,KAAK,CAACa,GAAN,CAAU,sCAAV,CAAtB;AACAK,IAAAA,OAAO,CAACC,GAAR,CAAYP,SAAZ;AACAJ,IAAAA,cAAc,CAACI,SAAS,CAACE,IAAX,CAAd;AACH;;AACDf,EAAAA,SAAS,CAAC,MAAM;AACZY,IAAAA,SAAS;AACTS,IAAAA,cAAc;AACjB,GAHQ,EAGN,EAHM,CAAT;AAIA,sBACI,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAE;AAAChB,MAAAA,UAAD;AAAYO,MAAAA,SAAZ;AAAsBF,MAAAA,IAAtB;AAA2BF,MAAAA,WAA3B;AAAuCa,MAAAA;AAAvC,KAA7B;AAAA,cACKjB,KAAK,CAACkB;AADX;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH;;GA3BQnB,mB;;KAAAA,mB;AA6BT,eAAeD,WAAf;AACA,SAAQC,mBAAR","sourcesContent":["import React, {useState,createContext,useEffect} from 'react'\nimport axios from 'axios'\nconst AuthContext=createContext();\nfunction AuthContextProvider(props) {\n    const [loggedUser, setLoggedUser] = useState(undefined);\n    const [loggedAdmin, setLoggedAdmin] = useState(undefined);\n    const [user, setUser] = useState({});\n    async function getLogged()\n    {\n        const loggedRes=await axios.get('http://localhost:8080/users/loggedIn')\n        setLoggedUser(loggedRes.data);\n        await axios.get('http://localhost:8080/users/loggeduser')\n        .then(data=>setUser(data.data))\n        .catch(e=>console.log(e))\n    }\n    async function getLoggedAdmin()\n    {\n        const loggedRes=await axios.get('http://localhost:8080/admin/loggedIn')\n        console.log(loggedRes);\n        setLoggedAdmin(loggedRes.data);\n    }\n    useEffect(() => {\n        getLogged();\n        getLoggedAdmin();\n    }, [])\n    return (\n        <AuthContext.Provider value={{loggedUser,getLogged,user,loggedAdmin,getLoggedAdmin}} >\n            {props.children}\n        </AuthContext.Provider>\n    )\n}\n\nexport default AuthContext;\nexport {AuthContextProvider};\n"]},"metadata":{},"sourceType":"module"}